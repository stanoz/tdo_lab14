name: 'Workflow tdo_lab14'
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment: (dev/production)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - production
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Lint code
        run: npm run lint
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Security audit
        run: npm audit --audit-level=high
  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Check format
        id: format-check
        run: npm run format:check
        continue-on-error: true
      - name: Fix format on failure
        if: steps.format-check.outcome == 'failure'
        run: npx prettier . --write
  unit_tests:
    needs:
      - audit
      - format-check
      - lint
    strategy:
      matrix:
        node_version: [16, 18, 20]
    env:
        NODE_ENV: test
        NODE_VERSION: ${{ matrix.node_version }}
    runs-on: ubuntu-latest
    container:
      image: node:${{ matrix.node_version }}
      options: --cpus 2 --memory 4g
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Run unit tests
        run: npm run test:unit
      - name: Archive test reports
        uses: actions/upload-artifact@v4
        with:
          name: junit-report-node-${{ matrix.node_version }}
          path: junit.xml
      - name: Archive coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.node_version }}
          path: coverage/
#  unit-tests:
#    strategy:
#      matrix:
#        node_version: [16, 18, 20]
#    runs-on: ubuntu-latest
#    env:
#      NODE_ENV: test
#      NODE_VERSION: ${{ matrix.node_version }}
#    environment: test
#    needs:
#      - audit
#      - format-check
#      - lint
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Docker Compose
#        run: docker compose up -d
#
#      - name: Run unit tests inside container
#        run: |
#          docker compose exec -T app npm run test:unit
#
#      - name: Ensure coverage dir exists
#        run: mkdir -p coverage/node-${{ matrix.node_version }}/lcov-report
#
#      - name: Copy coverage report from container
#        run: |
#          docker cp \
#            $(docker compose ps -q app):/app/coverage/junit-report-node-${{ matrix.node_version }} \
#            ./coverage/junit-report-node-${{ matrix.node_version }}
#
#      - name: Upload coverage report
#        uses: actions/upload-artifact@v4
#        with:
#          name: junit-report-node-${{ matrix.node_version }}
#          path: coverage/

