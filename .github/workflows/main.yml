name: 'Workflow tdo_lab14'
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment: (dev/production)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - production
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Lint code
        run: npm run lint
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Security audit
        run: npm audit --audit-level=high
  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Check format
        id: format-check
        run: npm run format:check
        continue-on-error: true
      - name: Fix format on failure
        if: steps.format-check.outcome == 'failure'
        run: npx prettier . --write
  unit-tests:
    runs-on: ubuntu-latest
    environment: test
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DATABASE }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.POSTGRES_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
    needs:
      - audit
      - format-check
      - lint
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Run unit tests
        id: unit-tests
        run: npm run test:unit
      - name: Test report
        uses: actions/download-artifact@v4
        with:
          name: coverage/lcov-report
