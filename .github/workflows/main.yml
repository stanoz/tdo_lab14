name: 'Workflow tdo_lab14'
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment: (dev/production)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - production
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Lint code
        run: npm run lint
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Security audit
        run: npm audit --audit-level=high
  format-check:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Check format
        id: format-check
        run: npm run format:check
        continue-on-error: true
      - name: Fix format on failure
        if: steps.format-check.outcome == 'failure'
        run: npx prettier . --write
  unit-tests:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    environment: test
    needs:
      - audit
      - format-check
      - lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          docker compose up -d

      - name: Run unit tests inside container
        run: |
          docker compose exec -T app npm run test:unit

      - name: Ensure coverage directory exists
        run: mkdir -p ./coverage

      - name: Copy coverage report from container
        run: |
          docker cp $(docker compose ps -q app):/app/coverage/lcov-report ./coverage/lcov-report

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: lcov-report
          path: ./coverage/lcov-report
